import{_ as s,X as n,Y as a,Z as t}from"./framework-3171eed8.js";const e={},p=t(`<p>First, make sure you have Node.js installed on your machine. Then follow these steps to create the project:</p><h2 id="create-a-new-directory-for-your-project" tabindex="-1"><a class="header-anchor" href="#create-a-new-directory-for-your-project" aria-hidden="true">#</a> Create a new directory for your project:</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> nodejs-login-todolist
<span class="token builtin class-name">cd</span> nodejs-login-todolist
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="initialize-a-new-node-js-project" tabindex="-1"><a class="header-anchor" href="#initialize-a-new-node-js-project" aria-hidden="true">#</a> Initialize a new Node.js project:</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> init <span class="token parameter variable">-y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="install-necessary-dependencies" tabindex="-1"><a class="header-anchor" href="#install-necessary-dependencies" aria-hidden="true">#</a> Install necessary dependencies:</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> express body-parser express-session
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="create-a-file-named-app-js" tabindex="-1"><a class="header-anchor" href="#create-a-file-named-app-js" aria-hidden="true">#</a> Create a file named <code>app.js</code>:</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// app.js
const express <span class="token operator">=</span> require<span class="token punctuation">(</span><span class="token string">&#39;express&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
const bodyParser <span class="token operator">=</span> require<span class="token punctuation">(</span><span class="token string">&#39;body-parser&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
const session <span class="token operator">=</span> require<span class="token punctuation">(</span><span class="token string">&#39;express-session&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

const app <span class="token operator">=</span> express<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

// Middleware
app.use<span class="token punctuation">(</span>bodyParser.urlencoded<span class="token punctuation">(</span><span class="token punctuation">{</span> extended: <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">))</span><span class="token punctuation">;</span>
app.use<span class="token punctuation">(</span>session<span class="token punctuation">(</span><span class="token punctuation">{</span>
    secret: <span class="token string">&#39;secret-key&#39;</span>,
    resave: false,
    saveUninitialized: <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">))</span><span class="token punctuation">;</span>

// In-memory storage <span class="token keyword">for</span> demonstration purpose
<span class="token builtin class-name">let</span> <span class="token function">users</span> <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> username: <span class="token string">&#39;user1&#39;</span>, password: <span class="token string">&#39;password1&#39;</span> <span class="token punctuation">}</span>,
    <span class="token punctuation">{</span> username: <span class="token string">&#39;user2&#39;</span>, password: <span class="token string">&#39;password2&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token builtin class-name">let</span> todos <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

// Middleware to check <span class="token keyword">if</span> user is authenticated
const isAuthenticated <span class="token operator">=</span> <span class="token punctuation">(</span>req, res, next<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>req.session.user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        next<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        res.redirect<span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

// Routes
app.get<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span>, isAuthenticated, <span class="token punctuation">(</span>req, res<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    res.send<span class="token punctuation">(</span><span class="token string">&#39;Welcome to Todo List App&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app.get<span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span>, <span class="token punctuation">(</span>req, res<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    res.send<span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span>
        <span class="token operator">&lt;</span>form <span class="token assign-left variable">action</span><span class="token operator">=</span><span class="token string">&quot;/login&quot;</span> <span class="token assign-left variable">method</span><span class="token operator">=</span><span class="token string">&quot;post&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>input <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">&quot;text&quot;</span> <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">&quot;username&quot;</span> <span class="token assign-left variable">placeholder</span><span class="token operator">=</span><span class="token string">&quot;Username&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>br<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>input <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">&quot;password&quot;</span> <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">&quot;password&quot;</span> <span class="token assign-left variable">placeholder</span><span class="token operator">=</span><span class="token string">&quot;Password&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span>br<span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>button <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">&quot;submit&quot;</span><span class="token operator">&gt;</span>Login<span class="token operator">&lt;</span>/button<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>/form<span class="token operator">&gt;</span>
    <span class="token variable">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app.post<span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span>, <span class="token punctuation">(</span>req, res<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    const <span class="token punctuation">{</span> username, password <span class="token punctuation">}</span> <span class="token operator">=</span> req.body<span class="token punctuation">;</span>
    const user <span class="token operator">=</span> users.find<span class="token punctuation">(</span>u <span class="token operator">=</span><span class="token operator">&gt;</span> u.username <span class="token operator">==</span><span class="token operator">=</span> username <span class="token operator">&amp;&amp;</span> u.password <span class="token operator">==</span><span class="token operator">=</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>user<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        req.session.user <span class="token operator">=</span> user<span class="token punctuation">;</span>
        res.redirect<span class="token punctuation">(</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        res.send<span class="token punctuation">(</span><span class="token string">&#39;Invalid username or password&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app.get<span class="token punctuation">(</span><span class="token string">&#39;/logout&#39;</span>, <span class="token punctuation">(</span>req, res<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    req.session.destroy<span class="token punctuation">(</span>err <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console.error<span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            res.redirect<span class="token punctuation">(</span><span class="token string">&#39;/login&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app.get<span class="token punctuation">(</span><span class="token string">&#39;/todo&#39;</span>, isAuthenticated, <span class="token punctuation">(</span>req, res<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    res.send<span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span>
        <span class="token operator">&lt;</span>form <span class="token assign-left variable">action</span><span class="token operator">=</span><span class="token string">&quot;/todo&quot;</span> <span class="token assign-left variable">method</span><span class="token operator">=</span><span class="token string">&quot;post&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>input <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">&quot;text&quot;</span> <span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token string">&quot;task&quot;</span> <span class="token assign-left variable">placeholder</span><span class="token operator">=</span><span class="token string">&quot;Enter your task&quot;</span><span class="token operator">&gt;</span>
            <span class="token operator">&lt;</span>button <span class="token assign-left variable">type</span><span class="token operator">=</span><span class="token string">&quot;submit&quot;</span><span class="token operator">&gt;</span>Add<span class="token operator">&lt;</span>/button<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>/form<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>ul<span class="token operator">&gt;</span>
            $<span class="token punctuation">{</span>todos.map<span class="token punctuation">(</span>todo <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token variable">\`</span></span><span class="token operator">&lt;</span>li<span class="token operator">&gt;</span><span class="token variable">\${todo}</span><span class="token operator">&lt;</span>/li<span class="token operator">&gt;</span><span class="token variable"><span class="token variable">\`</span><span class="token punctuation">)</span>.join<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
        <span class="token operator">&lt;</span>/ul<span class="token operator">&gt;</span>
        <span class="token operator">&lt;</span>a <span class="token assign-left variable">href</span><span class="token operator">=</span><span class="token string">&quot;/logout&quot;</span><span class="token operator">&gt;</span>Logout<span class="token operator">&lt;</span>/a<span class="token operator">&gt;</span>
    <span class="token variable">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

app.post<span class="token punctuation">(</span><span class="token string">&#39;/todo&#39;</span>, isAuthenticated, <span class="token punctuation">(</span>req, res<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    const task <span class="token operator">=</span> req.body.task<span class="token punctuation">;</span>
    todos.push<span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">;</span>
    res.redirect<span class="token punctuation">(</span><span class="token string">&#39;/todo&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

// Start server
const PORT <span class="token operator">=</span> p<wbr>rocess.env.PORT <span class="token operator">||</span> <span class="token number">3000</span><span class="token punctuation">;</span>
app.listen<span class="token punctuation">(</span>PORT, <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
    console.log<span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span>Server is running on port $<span class="token punctuation">{</span>PORT<span class="token punctuation">}</span><span class="token variable">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Run the application:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> app.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Now you can open your browser and navigate to <code>http://localhost:3000/login</code> to access the login page. You can use the credentials from the users array defined in the code to login. After logging in, you will be redirected to the todo list page (<code>http://localhost:3000/todo</code>) where you can add tasks. You can also logout by clicking the <code>Logout</code> link.</p>`,12),o=[p];function c(l,i){return n(),a("div",null,o)}const u=s(e,[["render",c],["__file","nodejs-first-step.html.vue"]]);export{u as default};
